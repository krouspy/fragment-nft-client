{
  "contractName": "ERC721MetadataMintable",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC721 minting logic with metadata.\\r\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID\\r The zero address indicates there is no approved address.\\r There can only be one approved address per token at a given time.\\r Can only be called by the token owner or an approved operator.\\r\",\"params\":{\"to\":\"address to be approved for the given token ID\\r\",\"tokenId\":\"uint256 ID of the token to be approved\\r\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\\r\",\"params\":{\"owner\":\"address to query the balance of\\r\"},\"return\":\"uint256 representing the amount owned by the passed address\\r\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be\\r automatically added as a preffix in {tokenURI} to each token's URI, when\\r they are non-empty.\\r\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set\\r Reverts if the token ID does not exist.\\r\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\\r\"},\"return\":\"address currently approved for the given token ID\\r\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\\r\",\"params\":{\"operator\":\"operator address which you want to query the approval of\\r\",\"owner\":\"owner address which you want to query the approval of\\r\"},\"return\":\"bool whether the given operator is approved by the given owner\\r\"},\"mintWithTokenURI(address,uint256,string)\":{\"details\":\"Function to mint tokens.\\r\",\"params\":{\"to\":\"The address that will receive the minted tokens.\\r\",\"tokenId\":\"The token id to mint.\\r\",\"tokenURI\":\"The token URI of the minted token.\\r\"},\"return\":\"A boolean that indicates if the operation was successful.\\r\"},\"name()\":{\"details\":\"Gets the token name.\\r\",\"return\":\"string representing the token name\\r\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\\r\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\\r\"},\"return\":\"address currently marked as the owner of the given token ID\\r\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address\\r If the target address is a contract, it must implement {IERC721Receiver-onERC721Received},\\r which is called upon a safe transfer, and return the magic value\\r `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise,\\r the transfer is reverted.\\r Requires the msg.sender to be the owner, approved, or operator\\r\",\"params\":{\"from\":\"current owner of the token\\r\",\"to\":\"address to receive the ownership of the given token ID\\r\",\"tokenId\":\"uint256 ID of the token to be transferred\\r\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address\\r If the target address is a contract, it must implement {IERC721Receiver-onERC721Received},\\r which is called upon a safe transfer, and return the magic value\\r `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise,\\r the transfer is reverted.\\r Requires the _msgSender() to be the owner, approved, or operator\\r\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\\r\",\"from\":\"current owner of the token\\r\",\"to\":\"address to receive the ownership of the given token ID\\r\",\"tokenId\":\"uint256 ID of the token to be transferred\\r\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator\\r An operator is allowed to transfer all tokens of the sender on their behalf.\\r\",\"params\":{\"approved\":\"representing the status of the approval to be set\\r\",\"to\":\"operator address to set the approval\\r\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\\r      * Time complexity O(1), guaranteed to always use less than 30 000 gas.\\r\"},\"symbol()\":{\"details\":\"Gets the token symbol.\\r\",\"return\":\"string representing the token symbol\\r\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.\\r      * If the token's URI is non-empty and a base URI was set (via\\r {_setBaseURI}), it will be added to the token ID's URI as a prefix.\\r      * Reverts if the token ID does not exist.\\r\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address.\\r Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\r Requires the msg.sender to be the owner, approved, or operator.\\r\",\"params\":{\"from\":\"current owner of the token\\r\",\"to\":\"address to receive the ownership of the given token ID\\r\",\"tokenId\":\"uint256 ID of the token to be transferred\\r\"}}},\"title\":\"ERC721MetadataMintable\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/klau/Documents/fragment-nft/contracts/ERC721/ERC721MetadataMintable/ERC721MetadataMintable.sol\":\"ERC721MetadataMintable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/klau/Documents/fragment-nft/contracts/ERC721/ERC721/ERC721.sol\":{\"keccak256\":\"0x8a66be560543fb043ff06bbcda384ddb28bb25e33405d76b2c6578708d089182\",\"urls\":[\"bzzr://1013e9174397f9e84f239c941ef56deafc218d4fb72d3bb3aaa9da16b27bc8c7\"]},\"/C/Users/klau/Documents/fragment-nft/contracts/ERC721/ERC721/IERC721.sol\":{\"keccak256\":\"0x447b39ec5e41ab4bbffefe1d6daf32850fd997cba2889547ad9c5541d10d3493\",\"urls\":[\"bzzr://80a1d0a55010a66da959846a29664a761104a3025b4a4b8118c15b1ca4b8e179\"]},\"/C/Users/klau/Documents/fragment-nft/contracts/ERC721/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x547a657dc6f559ab1f6f347f203fadf5be0b317eb44197a843cea050dc4eb4af\",\"urls\":[\"bzzr://ad9d8a625a41c7afaf368ad4f27cd78252d0c196c473db45f0902bccb5bf7324\"]},\"/C/Users/klau/Documents/fragment-nft/contracts/ERC721/ERC721Metadata/ERC721Metadata.sol\":{\"keccak256\":\"0xadf7e4dc0a61fce0da013f679deae40665252280cbdc48dcd686172cbadba43e\",\"urls\":[\"bzzr://0685c0cb6a57629db6c724d79be906fb5778f24850fa03bb2a60a3c552655cc2\"]},\"/C/Users/klau/Documents/fragment-nft/contracts/ERC721/ERC721Metadata/IERC721Metadata.sol\":{\"keccak256\":\"0x1fd85abd79f2661089aa8914728928791d696ea91ad09eaa7aa5feecc695af30\",\"urls\":[\"bzzr://2f088704badd2873410094e2b69e866f187a84a52cb701b92c85a0f17271dc2d\"]},\"/C/Users/klau/Documents/fragment-nft/contracts/ERC721/ERC721MetadataMintable/ERC721MetadataMintable.sol\":{\"keccak256\":\"0xf5080616c1b9332a038b9fa1dbdb7cbaa3de0b2363bc7b083f15456bd7002600\",\"urls\":[\"bzzr://4b4fccf08ce44c4504448b16be3a959e2aa948b7dfe79ff6766850fd44a0c406\"]},\"/C/Users/klau/Documents/fragment-nft/contracts/GSN/Context.sol\":{\"keccak256\":\"0x98d9c3f119eabc9384b14d85702d9a1249760fc32ae8cb295f1071a064c6733a\",\"urls\":[\"bzzr://beced7f16902f6de97148603c79e526e72d5244a56fb76d500ee3b857ff9bb47\"]},\"/C/Users/klau/Documents/fragment-nft/contracts/access/Roles.sol\":{\"keccak256\":\"0x5681f0c31d9438b73ddd86a21b118a2ed3db20e107f3526e5625f28109a8b454\",\"urls\":[\"bzzr://6605ab2b8fdcb64589bb6b462af2d07250416c98f7a8b1910138b8992b904612\"]},\"/C/Users/klau/Documents/fragment-nft/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x23fc0940b6e546509d835dd8894b9093ed196b407737d4fa05a437e6d4456a28\",\"urls\":[\"bzzr://5b8dc17089e27c0fb70bf4137b390676678cf88773bc2d313129b07130855acb\"]},\"/C/Users/klau/Documents/fragment-nft/contracts/drafts/Counters.sol\":{\"keccak256\":\"0xedc1d46f66898d8ae33a7e16244579d680a25554936a5e72f59f535d0a8b5dfe\",\"urls\":[\"bzzr://7f2a92ea20cb67d3e26279ade62a463b21d8c214bea1bacb495e35fe1705b7ef\"]},\"/C/Users/klau/Documents/fragment-nft/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xfd2daf3123fb28a75b3c11e6d6e16f594e2cb60f1e55d06669870d113499ca16\",\"urls\":[\"bzzr://d55367077b08f3cad62b55f3d82cbbc2bd3ce85f31eb8698c39fda05c835f051\"]},\"/C/Users/klau/Documents/fragment-nft/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x84f9de8008f3c333e320fa8eac048f6f59780ead789d47be58b60be6ef5b49fe\",\"urls\":[\"bzzr://e23d96b568eb7230efbd90a2033c88276f70dc60860e0cd442626dfbce614c3f\"]},\"/C/Users/klau/Documents/fragment-nft/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xeb295b448107f6adee6c0861eba7cd58983eeb1a2bf9cd24b3df9c75fe17db75\",\"urls\":[\"bzzr://cdb2eefb0ce6e610ee1b981cdaed5906eaeff5363d4cc6f3df854c93148c3916\"]},\"/C/Users/klau/Documents/fragment-nft/contracts/utils/Address.sol\":{\"keccak256\":\"0x954bfa7f9f3d7a268c779ca6e62abbd06eef6ec6950e346e8e647a64eb8964dd\",\"urls\":[\"bzzr://cdd3a61b7d084ff7b51a20bebf0bc364fe6c3f2cc4a7d9d3b5b4ae0d764ce90e\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620031b7380380620031b7833981018060405260408110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b828101905060208101848111156200006757600080fd5b81518560018202830111640100000000821117156200008557600080fd5b50509291906020018051640100000000811115620000a257600080fd5b82810190506020810184811115620000b957600080fd5b8151856001820283011164010000000082111715620000d757600080fd5b505092919050505081816200011e6301ffc9a77c01000000000000000000000000000000000000000000000000000000000262000206640100000000026401000000009004565b6200015b6380ac58cd7c01000000000000000000000000000000000000000000000000000000000262000206640100000000026401000000009004565b816005908051906020019062000173929190620005b2565b5080600690805190602001906200018c929190620005b2565b50620001ca635b5e139f7c01000000000000000000000000000000000000000000000000000000000262000206640100000000026401000000009004565b5050620001fe620001e96200032d640100000000026401000000009004565b62000335640100000000026401000000009004565b505062000661565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614151515620002c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600033905090565b620003598160096200039f6401000000000262002514179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b620003ba82826200048e640100000000026401000000009004565b15151562000430576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200055b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f526f6c65733a206163636f756e7420697320746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005f557805160ff191683800117855562000626565b8280016001018555821562000626579182015b828111156200062557825182559160200191906001019062000608565b5b50905062000635919062000639565b5090565b6200065e91905b808211156200065a57600081600090555060010162000640565b5090565b90565b612b4680620006716000396000f3fe6080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a71461010157806306fdde0314610173578063081812fc14610203578063095ea7b31461027e57806323b872dd146102d957806342842e0e1461035457806350bb4e7f146103cf5780636352211e146104d95780636c0360eb1461055457806370a08231146105e457806395d89b4114610649578063983b2d56146106d9578063986502751461072a578063a22cb46514610741578063aa271e1a1461079e578063b88d4fde14610807578063c87b56dd14610919578063e985e9c5146109cd575b600080fd5b34801561010d57600080fd5b506101596004803603602081101561012457600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610a56565b604051808215151515815260200191505060405180910390f35b34801561017f57600080fd5b50610188610abd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c85780820151818401526020810190506101ad565b50505050905090810190601f1680156101f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020f57600080fd5b5061023c6004803603602081101561022657600080fd5b8101908080359060200190929190505050610b5f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028a57600080fd5b506102d7600480360360408110156102a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c3f565b005b3480156102e557600080fd5b50610352600480360360608110156102fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610eb0565b005b34801561036057600080fd5b506103cd6004803603606081101561037757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f6b565b005b3480156103db57600080fd5b506104bf600480360360608110156103f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561043957600080fd5b82018360208201111561044b57600080fd5b8035906020019184600183028401116401000000008311171561046d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f8c565b604051808215151515815260200191505060405180910390f35b3480156104e557600080fd5b50610512600480360360208110156104fc57600080fd5b8101908080359060200190929190505050611057565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561056057600080fd5b50610569611164565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105a957808201518184015260208101905061058e565b50505050905090810190601f1680156105d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105f057600080fd5b506106336004803603602081101561060757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611206565b6040518082815260200191505060405180910390f35b34801561065557600080fd5b5061065e611320565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561069e578082015181840152602081019050610683565b50505050905090810190601f1680156106cb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106e557600080fd5b50610728600480360360208110156106fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113c2565b005b34801561073657600080fd5b5061073f611478565b005b34801561074d57600080fd5b5061079c6004803603604081101561076457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061148a565b005b3480156107aa57600080fd5b506107ed600480360360208110156107c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611644565b604051808215151515815260200191505060405180910390f35b34801561081357600080fd5b506109176004803603608081101561082a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561089157600080fd5b8201836020820111156108a357600080fd5b803590602001918460018302840111640100000000831117156108c557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611661565b005b34801561092557600080fd5b506109526004803603602081101561093c57600080fd5b810190808035906020019092919050505061171e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610992578082015181840152602081019050610977565b50505050905090810190601f1680156109bf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156109d957600080fd5b50610a3c600480360360408110156109f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611968565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b555780601f10610b2a57610100808354040283529160200191610b55565b820191906000526020600020905b815481529060010190602001808311610b3857829003601f168201915b5050505050905090565b6000610b6a826119fc565b1515610c04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f4552433732313a20617070726f76656420717565727920666f72206e6f6e657881526020017f697374656e7420746f6b656e000000000000000000000000000000000000000081525060400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610c4a82611057565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610d16576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6581526020017f720000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610d35611a6e565b73ffffffffffffffffffffffffffffffffffffffff161480610d645750610d6381610d5e611a6e565b611968565b5b1515610dfe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7781526020017f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000081525060400191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b610ec1610ebb611a6e565b82611a76565b1515610f5b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001807f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f81526020017f776e6572206e6f7220617070726f76656400000000000000000000000000000081525060400191505060405180910390fd5b610f66838383611baf565b505050565b610f878383836020604051908101604052806000815250611661565b505050565b6000610f9e610f99611a6e565b611644565b1515611038576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766581526020017f20746865204d696e74657220726f6c650000000000000000000000000000000081525060400191505060405180910390fd5b6110428484611e94565b61104c83836120b0565b600190509392505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561115b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f4552433732313a206f776e657220717565727920666f72206e6f6e657869737481526020017f656e7420746f6b656e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80915050919050565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111fc5780601f106111d1576101008083540402835291602001916111fc565b820191906000526020600020905b8154815290600101906020018083116111df57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156112d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f4552433732313a2062616c616e636520717565727920666f7220746865207a6581526020017f726f20616464726573730000000000000000000000000000000000000000000081525060400191505060405180910390fd5b611319600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061217f565b9050919050565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113b85780601f1061138d576101008083540402835291602001916113b8565b820191906000526020600020905b81548152906001019060200180831161139b57829003601f168201915b5050505050905090565b6113d26113cd611a6e565b611644565b151561146c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766581526020017f20746865204d696e74657220726f6c650000000000000000000000000000000081525060400191505060405180910390fd5b6114758161218d565b50565b611488611483611a6e565b6121e7565b565b611492611a6e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611535576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060046000611542611a6e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166115ef611a6e565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b600061165a82600961224190919063ffffffff16565b9050919050565b61167261166c611a6e565b83611a76565b151561170c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001807f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f81526020017f776e6572206e6f7220617070726f76656400000000000000000000000000000081525060400191505060405180910390fd5b61171884848484612364565b50505050565b6060611729826119fc565b15156117c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001807f4552433732314d657461646174613a2055524920717565727920666f72206e6f81526020017f6e6578697374656e7420746f6b656e000000000000000000000000000000000081525060400191505060405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561186c5780601f106118415761010080835404028352916020019161186c565b820191906000526020600020905b81548152906001019060200180831161184f57829003601f168201915b50505050509050600081511415611896576020604051908101604052806000815250915050611963565b60078160405160200180838054600181600116156101000203166002900480156118f75780601f106118d55761010080835404028352918201916118f7565b820191906000526020600020905b8154815290600101906020018083116118e3575b505082805190602001908083835b60208310151561192a5780518252602082019150602081019050602083039250611905565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b6000611a81826119fc565b1515611b1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657881526020017f697374656e7420746f6b656e000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000611b2683611057565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611b9557508373ffffffffffffffffffffffffffffffffffffffff16611b7d84610b5f565b73ffffffffffffffffffffffffffffffffffffffff16145b80611ba65750611ba58185611968565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611bcf82611057565b73ffffffffffffffffffffffffffffffffffffffff16141515611c80576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f4552433732313a207472616e73666572206f6620746f6b656e2074686174206981526020017f73206e6f74206f776e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611d4b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f4552433732313a207472616e7366657220746f20746865207a65726f2061646481526020017f726573730000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b611d548161241b565b611d9b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124db565b611de2600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124fe565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611f39576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b611f42816119fc565b151515611fb7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612050600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124fe565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6120b9826119fc565b1515612153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f4552433732314d657461646174613a2055524920736574206f66206e6f6e657881526020017f697374656e7420746f6b656e000000000000000000000000000000000000000081525060400191505060405180910390fd5b8060086000848152602001908152602001600020908051906020019061217a929190612a75565b505050565b600081600001549050919050565b6121a181600961251490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6121fb8160096125f190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561230d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f526f6c65733a206163636f756e7420697320746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61236f848484611baf565b61237b848484846126f3565b1515612415576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001807f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581526020017f63656976657220696d706c656d656e746572000000000000000000000000000081525060400191505060405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156124d85760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6124f36001826000015461291d90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b61251e8282612241565b151515612593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6125fb8282612241565b1515612695576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c81526020017f650000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60006127148473ffffffffffffffffffffffffffffffffffffffff16612967565b15156127235760019050612915565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02612749611a6e565b8887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612821578082015181840152602081019050612806565b50505050905090810190601f16801561284e5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561287057600080fd5b505af1158015612884573d6000803e3d6000fd5b505050506040513d602081101561289a57600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600061295f83836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506129b3565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4706001029050833f9150600060010282141580156129aa5750808214155b92505050919050565b60008383111582901515612a62576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612a27578082015181840152602081019050612a0c565b50505050905090810190601f168015612a545780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612ab657805160ff1916838001178555612ae4565b82800160010185558215612ae4579182015b82811115612ae3578251825591602001919060010190612ac8565b5b509050612af19190612af5565b5090565b612b1791905b80821115612b13576000816000905550600101612afb565b5090565b9056fea165627a7a723058208c30cd25606ddce58fb53c6ba437869a6ef7db16eb2275de5220f4d69f61d0cf0029",
  "deployedBytecode": "",
  "sourceMap": "243:692:5:-;;;320:92;8:9:-1;5:2;;;30:1;27;20:12;5:2;320:92:5;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;320:92:5;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;320:92:5;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;320:92:5;;;;;;389:4;395:6;742:40:23;399:10;761:20;;742:18;;;:40;;;:::i;:::-;2315::0;2185:10;2334:20;;2315:18;;;:40;;;:::i;:::-;960:4:3;952:5;:12;;;;;;;;;;;;:::i;:::-;;985:6;975:7;:16;;;;;;;;;;;;:::i;:::-;;1082:49;809:10;1101:29;;1082:18;;;:49;;;:::i;:::-;880:259;;332:24:14;343:12;:10;;;:12;;;:::i;:::-;332:10;;;:24;;;:::i;:::-;320:92:5;;243:692;;1489:193:23;1580:10;1565:25;;:11;:25;;;;;1557:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1670:4;1634:20;:33;1655:11;1634:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1489:193;:::o;806:98:7:-;851:15;886:10;879:17;;806:98;:::o;820:122:14:-;877:21;890:7;877:8;:12;;;;;;:21;;;;;:::i;:::-;926:7;914:20;;;;;;;;;;;;820:122;:::o;274:178:13:-;352:18;356:4;362:7;352:3;;;:18;;;:::i;:::-;351:19;343:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:4;417;:11;;:20;429:7;417:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;274:178;;:::o;810:203::-;882:4;926:1;907:21;;:7;:21;;;;899:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;985:4;:11;;:20;997:7;985:20;;;;;;;;;;;;;;;;;;;;;;;;;978:27;;810:203;;;;:::o;243:692:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "243:692:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:135:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;947:135:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;947:135:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:85:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1250:85:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1250:85:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4388:204:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4388:204:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4388:204:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3670:425;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3670:425:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3670:425:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6071:292;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6071:292:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6071:292:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7025:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7025:134:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7025:134:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;719:213:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;719:213:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;719:213:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;719:213:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;719:213:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;719:213:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;719:213:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:228:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3011:228:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3011:228:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2647:91:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2647:91:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2647:91:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2574:211:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2574:211:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2574:211:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1450:89:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1450:89:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1450:89:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;633:92:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;633:92:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;633:92:14;;;;;;;;;;;;;;;;;;;;;;733:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;733:79:14;;;;;;4893:254:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4893:254:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4893:254:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;516:109:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;516:109:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;516:109:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7896:272:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7896:272:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7896:272:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7896:272:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7896:272:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7896:272:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7896:272:0;;;;;;;;;;;;;;;;;;1852:594:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1852:594:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1852:594:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1852:594:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5477:147:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5477:147:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5477:147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:135:23;1017:4;1041:20;:33;1062:11;1041:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1034:40;;947:135;;;:::o;1250:85:3:-;1289:13;1322:5;1315:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:85;:::o;4388:204:0:-;4447:7;4475:16;4483:7;4475;:16::i;:::-;4467:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4560:15;:24;4576:7;4560:24;;;;;;;;;;;;;;;;;;;;;4553:31;;4388:204;;;:::o;3670:425::-;3734:13;3750:16;3758:7;3750;:16::i;:::-;3734:32;;3791:5;3785:11;;:2;:11;;;;3777:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3871:5;3855:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3880:37;3897:5;3904:12;:10;:12::i;:::-;3880:16;:37::i;:::-;3855:62;3847:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4041:2;4014:15;:24;4030:7;4014:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4079:7;4075:2;4059:28;;4068:5;4059:28;;;;;;;;;;;;3670:425;;;:::o;6071:292::-;6215:41;6234:12;:10;:12::i;:::-;6248:7;6215:18;:41::i;:::-;6207:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6323:32;6337:4;6343:2;6347:7;6323:13;:32::i;:::-;6071:292;;;:::o;7025:134::-;7112:39;7129:4;7135:2;7139:7;7112:39;;;;;;;;;;;;;:16;:39::i;:::-;7025:134;;;:::o;719:213:5:-;825:4;413:22:14;422:12;:10;:12::i;:::-;413:8;:22::i;:::-;405:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;842:18:5;848:2;852:7;842:5;:18::i;:::-;871:31;884:7;893:8;871:12;:31::i;:::-;920:4;913:11;;719:213;;;;;:::o;3011:228:0:-;3066:7;3086:13;3102:11;:20;3114:7;3102:20;;;;;;;;;;;;;;;;;;;;;3086:36;;3158:1;3141:19;;:5;:19;;;;3133:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3226:5;3219:12;;;3011:228;;;:::o;2647:91:3:-;2689:13;2722:8;2715:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2647:91;:::o;2574:211:0:-;2629:7;2674:1;2657:19;;:5;:19;;;;2649:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2743:34;:17;:24;2761:5;2743:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2736:41;;2574:211;;;:::o;1450:89:3:-;1491:13;1524:7;1517:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1450:89;:::o;633:92:14:-;413:22;422:12;:10;:12::i;:::-;413:8;:22::i;:::-;405:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;698:19;709:7;698:10;:19::i;:::-;633:92;:::o;733:79::-;777:27;791:12;:10;:12::i;:::-;777:13;:27::i;:::-;733:79::o;4893:254:0:-;4979:12;:10;:12::i;:::-;4973:18;;:2;:18;;;;4965:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5073:8;5034:18;:32;5053:12;:10;:12::i;:::-;5034:32;;;;;;;;;;;;;;;:36;5067:2;5034:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;5126:2;5097:42;;5112:12;:10;:12::i;:::-;5097:42;;;5130:8;5097:42;;;;;;;;;;;;;;;;;;;;;;4893:254;;:::o;516:109:14:-;572:4;596:21;609:7;596:8;:12;;:21;;;;:::i;:::-;589:28;;516:109;;;:::o;7896:272:0:-;8011:41;8030:12;:10;:12::i;:::-;8044:7;8011:18;:41::i;:::-;8003:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8117:43;8135:4;8141:2;8145:7;8154:5;8117:17;:43::i;:::-;7896:272;;;;:::o;1852:594:3:-;1910:13;1958:16;1966:7;1958;:16::i;:::-;1936:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2062:23;2088:10;:19;2099:7;2088:19;;;;;;;;;;;2062:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:1;2224:9;2218:23;:28;2214:225;;;2263:9;;;;;;;;;;;;;;;;;;2214:225;2406:8;2416:9;2389:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2389:37:3;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2389:37:3;;;2375:52;;;1852:594;;;;:::o;5477:147:0:-;5557:4;5581:18;:25;5600:5;5581:25;;;;;;;;;;;;;;;:35;5607:8;5581:35;;;;;;;;;;;;;;;;;;;;;;;;;5574:42;;5477:147;;;;:::o;9361:155::-;9418:4;9435:13;9451:11;:20;9463:7;9451:20;;;;;;;;;;;;;;;;;;;;;9435:36;;9506:1;9489:19;;:5;:19;;;;9482:26;;;9361:155;;;:::o;806:98:7:-;851:15;886:10;879:17;;806:98;:::o;9886:333:0:-;9971:4;9996:16;10004:7;9996;:16::i;:::-;9988:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10072:13;10088:16;10096:7;10088;:16::i;:::-;10072:32;;10134:5;10123:16;;:7;:16;;;:51;;;;10167:7;10143:31;;:20;10155:7;10143:11;:20::i;:::-;:31;;;10123:51;:87;;;;10178:32;10195:5;10202:7;10178:16;:32::i;:::-;10123:87;10115:96;;;9886:333;;;;:::o;13582:459::-;13696:4;13676:24;;:16;13684:7;13676;:16::i;:::-;:24;;;13668:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13779:1;13765:16;;:2;:16;;;;13757:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13835:23;13850:7;13835:14;:23::i;:::-;13871:35;:17;:23;13889:4;13871:23;;;;;;;;;;;;;;;:33;:35::i;:::-;13917:33;:17;:21;13935:2;13917:21;;;;;;;;;;;;;;;:31;:33::i;:::-;13986:2;13963:11;:20;13975:7;13963:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;14025:7;14021:2;14006:27;;14015:4;14006:27;;;;;;;;;;;;13582:459;;;:::o;11971:335::-;12057:1;12043:16;;:2;:16;;;;12035:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12116:16;12124:7;12116;:16::i;:::-;12115:17;12107:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12201:2;12178:11;:20;12190:7;12178:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12214:33;:17;:21;12232:2;12214:21;;;;;;;;;;;;;;;:31;:33::i;:::-;12290:7;12286:2;12265:33;;12282:1;12265:33;;;;;;;;;;;;11971:335;;:::o;3073:244:3:-;3179:16;3187:7;3179;:16::i;:::-;3157:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3300:9;3278:10;:19;3289:7;3278:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;3073:244;;:::o;1090:114:20:-;1155:7;1182;:14;;;1175:21;;1090:114;;;:::o;820:122:14:-;877:21;890:7;877:8;:12;;:21;;;;:::i;:::-;926:7;914:20;;;;;;;;;;;;820:122;:::o;950:130::-;1010:24;1026:7;1010:8;:15;;:24;;;;:::i;:::-;1064:7;1050:22;;;;;;;;;;;;950:130;:::o;810:203:13:-;882:4;926:1;907:21;;:7;:21;;;;899:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;985:4;:11;;:20;997:7;985:20;;;;;;;;;;;;;;;;;;;;;;;;;978:27;;810:203;;;;:::o;8887:272:0:-;8997:32;9011:4;9017:2;9021:7;8997:13;:32::i;:::-;9048:48;9071:4;9077:2;9081:7;9090:5;9048:22;:48::i;:::-;9040:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8887:272;;;;:::o;15219:175::-;15319:1;15283:38;;:15;:24;15299:7;15283:24;;;;;;;;;;;;;;;;;;;;;:38;;;;15279:108;;;15373:1;15338:15;:24;15354:7;15338:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;15279:108;15219:175;:::o;1401:110:20:-;1482:21;1501:1;1482:7;:14;;;:18;;:21;;;;:::i;:::-;1465:7;:14;;:38;;;;1401:110;:::o;1212:181::-;1384:1;1366:7;:14;;;:19;;;;;;;;;;;1212:181;:::o;274:178:13:-;352:18;356:4;362:7;352:3;:18::i;:::-;351:19;343:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:4;417;:11;;:20;429:7;417:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;274:178;;:::o;532:183::-;612:18;616:4;622:7;612:3;:18::i;:::-;604:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:5;679:4;:11;;:20;691:7;679:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;532:183;;:::o;14693:358:0:-;14815:4;14842:15;:2;:13;;;:15::i;:::-;14841:16;14837:60;;;14881:4;14874:11;;;;14837:60;14909:13;14941:2;14925:36;;;14962:12;:10;:12::i;:::-;14976:4;14982:7;14991:5;14925:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14925:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14925:72:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14925:72:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14925:72:0;;;;;;;;;;;;;;;;14909:88;;775:10;15026:16;;15016:26;;;:6;:26;;;;15008:35;;;14693:358;;;;;;;:::o;1315:136:25:-;1373:7;1400:43;1404:1;1407;1400:43;;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1393:50;;1315:136;;;;:::o;602:810:27:-;662:4;1115:16;1142:19;1164:66;1142:88;;;;1333:7;1321:20;1309:32;;1373:3;1361:15;;:8;:15;;:42;;;;;1392:11;1380:8;:23;;1361:42;1353:51;;;;602:810;;;:::o;1788:192:25:-;1874:7;1907:1;1902;:6;;1910:12;1894:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1894:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:9;1950:1;1946;:5;1934:17;;1971:1;1964:8;;;1788:192;;;;;:::o;243:692:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"../ERC721/ERC721.sol\";\r\nimport \"../ERC721Metadata/ERC721Metadata.sol\";\r\nimport \"../../access/roles/MinterRole.sol\";\r\n\r\n/**\r\n * @title ERC721MetadataMintable\r\n * @dev ERC721 minting logic with metadata.\r\n */\r\ncontract ERC721MetadataMintable is ERC721, ERC721Metadata, MinterRole {\r\n    constructor(string memory name, string memory symbol) ERC721Metadata(name, symbol) public {}\r\n    /**\r\n     * @dev Function to mint tokens.\r\n     * @param to The address that will receive the minted tokens.\r\n     * @param tokenId The token id to mint.\r\n     * @param tokenURI The token URI of the minted token.\r\n     * @return A boolean that indicates if the operation was successful.\r\n     */\r\n    function mintWithTokenURI(address to, uint256 tokenId, string memory tokenURI) public onlyMinter returns (bool) {\r\n        _mint(to, tokenId);\r\n        _setTokenURI(tokenId, tokenURI);\r\n        return true;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\klau\\Documents\\fragment-nft\\contracts\\ERC721\\ERC721MetadataMintable\\ERC721MetadataMintable.sol",
  "ast": {
    "absolutePath": "/C/Users/klau/Documents/fragment-nft/contracts/ERC721/ERC721MetadataMintable/ERC721MetadataMintable.sol",
    "exportedSymbols": {
      "ERC721MetadataMintable": [
        1001
      ]
    },
    "id": 1002,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 953,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/C/Users/klau/Documents/fragment-nft/contracts/ERC721/ERC721/ERC721.sol",
        "file": "../ERC721/ERC721.sol",
        "id": 954,
        "nodeType": "ImportDirective",
        "scope": 1002,
        "sourceUnit": 637,
        "src": "27:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/klau/Documents/fragment-nft/contracts/ERC721/ERC721Metadata/ERC721Metadata.sol",
        "file": "../ERC721Metadata/ERC721Metadata.sol",
        "id": 955,
        "nodeType": "ImportDirective",
        "scope": 1002,
        "sourceUnit": 929,
        "src": "59:46:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/klau/Documents/fragment-nft/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 956,
        "nodeType": "ImportDirective",
        "scope": 1002,
        "sourceUnit": 2079,
        "src": "107:43:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 957,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 636,
              "src": "278:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$636",
                "typeString": "contract ERC721"
              }
            },
            "id": 958,
            "nodeType": "InheritanceSpecifier",
            "src": "278:6:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 959,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 928,
              "src": "286:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$928",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 960,
            "nodeType": "InheritanceSpecifier",
            "src": "286:14:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 961,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2078,
              "src": "302:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$2078",
                "typeString": "contract MinterRole"
              }
            },
            "id": 962,
            "nodeType": "InheritanceSpecifier",
            "src": "302:10:5"
          }
        ],
        "contractDependencies": [
          636,
          739,
          928,
          951,
          1097,
          2078,
          2985,
          2995
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721MetadataMintable\r\n@dev ERC721 minting logic with metadata.\r",
        "fullyImplemented": true,
        "id": 1001,
        "linearizedBaseContracts": [
          1001,
          2078,
          928,
          951,
          636,
          739,
          2985,
          2995,
          1097
        ],
        "name": "ERC721MetadataMintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 973,
              "nodeType": "Block",
              "src": "410:2:5",
              "statements": []
            },
            "documentation": null,
            "id": 974,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 969,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 964,
                    "src": "389:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 970,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 966,
                    "src": "395:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 971,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 968,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 928,
                  "src": "374:14:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$928_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "374:28:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 964,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 974,
                  "src": "332:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "332:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 966,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 974,
                  "src": "352:20:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "352:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "331:42:5"
            },
            "returnParameters": {
              "id": 972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "410:0:5"
            },
            "scope": 1001,
            "src": "320:92:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 999,
              "nodeType": "Block",
              "src": "831:101:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 988,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 976,
                        "src": "848:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 989,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 978,
                        "src": "852:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 987,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "842:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "842:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "842:18:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 993,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 978,
                        "src": "884:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 994,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "893:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 992,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "871:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "871:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 996,
                  "nodeType": "ExpressionStatement",
                  "src": "871:31:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "920:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 986,
                  "id": 998,
                  "nodeType": "Return",
                  "src": "913:11:5"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens.\r\n@param to The address that will receive the minted tokens.\r\n@param tokenId The token id to mint.\r\n@param tokenURI The token URI of the minted token.\r\n@return A boolean that indicates if the operation was successful.\r",
            "id": 1000,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 983,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 982,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2011,
                  "src": "805:10:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "805:10:5"
              }
            ],
            "name": "mintWithTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 976,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "745:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 978,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "757:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 977,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 980,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "774:22:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "744:53:5"
            },
            "returnParameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "825:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "824:6:5"
            },
            "scope": 1001,
            "src": "719:213:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1002,
        "src": "243:692:5"
      }
    ],
    "src": "0:937:5"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/klau/Documents/fragment-nft/contracts/ERC721/ERC721MetadataMintable/ERC721MetadataMintable.sol",
    "exportedSymbols": {
      "ERC721MetadataMintable": [
        1001
      ]
    },
    "id": 1002,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 953,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/C/Users/klau/Documents/fragment-nft/contracts/ERC721/ERC721/ERC721.sol",
        "file": "../ERC721/ERC721.sol",
        "id": 954,
        "nodeType": "ImportDirective",
        "scope": 1002,
        "sourceUnit": 637,
        "src": "27:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/klau/Documents/fragment-nft/contracts/ERC721/ERC721Metadata/ERC721Metadata.sol",
        "file": "../ERC721Metadata/ERC721Metadata.sol",
        "id": 955,
        "nodeType": "ImportDirective",
        "scope": 1002,
        "sourceUnit": 929,
        "src": "59:46:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/klau/Documents/fragment-nft/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 956,
        "nodeType": "ImportDirective",
        "scope": 1002,
        "sourceUnit": 2079,
        "src": "107:43:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 957,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 636,
              "src": "278:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$636",
                "typeString": "contract ERC721"
              }
            },
            "id": 958,
            "nodeType": "InheritanceSpecifier",
            "src": "278:6:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 959,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 928,
              "src": "286:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$928",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 960,
            "nodeType": "InheritanceSpecifier",
            "src": "286:14:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 961,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2078,
              "src": "302:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$2078",
                "typeString": "contract MinterRole"
              }
            },
            "id": 962,
            "nodeType": "InheritanceSpecifier",
            "src": "302:10:5"
          }
        ],
        "contractDependencies": [
          636,
          739,
          928,
          951,
          1097,
          2078,
          2985,
          2995
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721MetadataMintable\r\n@dev ERC721 minting logic with metadata.\r",
        "fullyImplemented": true,
        "id": 1001,
        "linearizedBaseContracts": [
          1001,
          2078,
          928,
          951,
          636,
          739,
          2985,
          2995,
          1097
        ],
        "name": "ERC721MetadataMintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 973,
              "nodeType": "Block",
              "src": "410:2:5",
              "statements": []
            },
            "documentation": null,
            "id": 974,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 969,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 964,
                    "src": "389:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 970,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 966,
                    "src": "395:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 971,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 968,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 928,
                  "src": "374:14:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$928_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "374:28:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 964,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 974,
                  "src": "332:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "332:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 966,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 974,
                  "src": "352:20:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "352:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "331:42:5"
            },
            "returnParameters": {
              "id": 972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "410:0:5"
            },
            "scope": 1001,
            "src": "320:92:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 999,
              "nodeType": "Block",
              "src": "831:101:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 988,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 976,
                        "src": "848:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 989,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 978,
                        "src": "852:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 987,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "842:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "842:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "842:18:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 993,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 978,
                        "src": "884:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 994,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "893:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 992,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "871:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "871:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 996,
                  "nodeType": "ExpressionStatement",
                  "src": "871:31:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "920:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 986,
                  "id": 998,
                  "nodeType": "Return",
                  "src": "913:11:5"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens.\r\n@param to The address that will receive the minted tokens.\r\n@param tokenId The token id to mint.\r\n@param tokenURI The token URI of the minted token.\r\n@return A boolean that indicates if the operation was successful.\r",
            "id": 1000,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 983,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 982,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2011,
                  "src": "805:10:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "805:10:5"
              }
            ],
            "name": "mintWithTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 976,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "745:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 978,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "757:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 977,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 980,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "774:22:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "744:53:5"
            },
            "returnParameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "825:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "824:6:5"
            },
            "scope": 1001,
            "src": "719:213:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1002,
        "src": "243:692:5"
      }
    ],
    "src": "0:937:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "1583151954575": {
      "events": {
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xf46cb2f886F2Fa0ce711CF090A9E1972F26b60d6",
      "transactionHash": "0xc8ccbf8688c8623b48ed8e9be58b0fbbb62666523ae0fb1caa0dd233d3fd8b37"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-02T12:26:13.817Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "ERC721 minting logic with metadata.\r",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID\r The zero address indicates there is no approved address.\r There can only be one approved address per token at a given time.\r Can only be called by the token owner or an approved operator.\r",
        "params": {
          "to": "address to be approved for the given token ID\r",
          "tokenId": "uint256 ID of the token to be approved\r"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.\r",
        "params": {
          "owner": "address to query the balance of\r"
        },
        "return": "uint256 representing the amount owned by the passed address\r"
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be\r automatically added as a preffix in {tokenURI} to each token's URI, when\r they are non-empty.\r"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set\r Reverts if the token ID does not exist.\r",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of\r"
        },
        "return": "address currently approved for the given token ID\r"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.\r",
        "params": {
          "operator": "operator address which you want to query the approval of\r",
          "owner": "owner address which you want to query the approval of\r"
        },
        "return": "bool whether the given operator is approved by the given owner\r"
      },
      "mintWithTokenURI(address,uint256,string)": {
        "details": "Function to mint tokens.\r",
        "params": {
          "to": "The address that will receive the minted tokens.\r",
          "tokenId": "The token id to mint.\r",
          "tokenURI": "The token URI of the minted token.\r"
        },
        "return": "A boolean that indicates if the operation was successful.\r"
      },
      "name()": {
        "details": "Gets the token name.\r",
        "return": "string representing the token name\r"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.\r",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of\r"
        },
        "return": "address currently marked as the owner of the given token ID\r"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address\r If the target address is a contract, it must implement {IERC721Receiver-onERC721Received},\r which is called upon a safe transfer, and return the magic value\r `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\r the transfer is reverted.\r Requires the msg.sender to be the owner, approved, or operator\r",
        "params": {
          "from": "current owner of the token\r",
          "to": "address to receive the ownership of the given token ID\r",
          "tokenId": "uint256 ID of the token to be transferred\r"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address\r If the target address is a contract, it must implement {IERC721Receiver-onERC721Received},\r which is called upon a safe transfer, and return the magic value\r `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\r the transfer is reverted.\r Requires the _msgSender() to be the owner, approved, or operator\r",
        "params": {
          "_data": "bytes data to send along with a safe transfer check\r",
          "from": "current owner of the token\r",
          "to": "address to receive the ownership of the given token ID\r",
          "tokenId": "uint256 ID of the token to be transferred\r"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator\r An operator is allowed to transfer all tokens of the sender on their behalf.\r",
        "params": {
          "approved": "representing the status of the approval to be set\r",
          "to": "operator address to set the approval\r"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.\r      * Time complexity O(1), guaranteed to always use less than 30 000 gas.\r"
      },
      "symbol()": {
        "details": "Gets the token symbol.\r",
        "return": "string representing the token symbol\r"
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.\r      * If the token's URI is non-empty and a base URI was set (via\r {_setBaseURI}), it will be added to the token ID's URI as a prefix.\r      * Reverts if the token ID does not exist.\r"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address.\r Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r Requires the msg.sender to be the owner, approved, or operator.\r",
        "params": {
          "from": "current owner of the token\r",
          "to": "address to receive the ownership of the given token ID\r",
          "tokenId": "uint256 ID of the token to be transferred\r"
        }
      }
    },
    "title": "ERC721MetadataMintable\r"
  },
  "userdoc": {
    "methods": {}
  }
}